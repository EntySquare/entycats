{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1295 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC7BF8CF5 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC7BF8CF5 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xD5091834 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xF1CE62B7 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xF231A4F6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xFB4A2B7A EQ PUSH2 0x1FD JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x2F4EFC1F EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x484A3FF4 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8A9FAAD2 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x235 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xDA0BAB807633F07F013F94DD0E6A4F96F8742B53 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH20 0xDA0BAB807633F07F013F94DD0E6A4F96F8742B53 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DBE47E8 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x3CE JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC7BF8CF5 DUP7 PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x415 SWAP3 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC7BF8CF5 DUP7 PUSH1 0x2 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ ISZERO PUSH2 0x741 JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x798 JUMP JUMPDEST PUSH1 0x2 DUP3 EQ ISZERO PUSH2 0x797 JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x798 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DBE47E8 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST ISZERO PUSH2 0xA57 JUMPI PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x8FF JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8F5 DUP3 PUSH1 0x3 PUSH1 0x0 ADD SLOAD PUSH2 0xD8E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x981 JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FE SWAP3 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA6A SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP2 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP2 PUSH1 0x3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP3 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC5 DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDDA DUP2 PUSH2 0x1231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDEF DUP2 PUSH2 0x1248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE04 DUP2 PUSH2 0x1248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE2A DUP5 DUP3 DUP6 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE54 DUP6 DUP3 DUP7 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE65 DUP6 DUP3 DUP7 ADD PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE92 DUP7 DUP3 DUP8 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEA3 DUP7 DUP3 DUP8 ADD PUSH2 0xDE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEB4 DUP7 DUP3 DUP8 ADD PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDE DUP5 DUP3 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF07 DUP5 DUP3 DUP6 ADD PUSH2 0xDF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0x1112 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0x1124 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0x115A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0x117E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF55 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF64 DUP2 PUSH2 0x1150 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF9A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xFB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFD1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xFDE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFFA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x1007 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF4C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1023 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x1030 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1067 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1082 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1093 DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0x109E DUP4 PUSH2 0x1150 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10D3 JUMPI PUSH2 0x10D2 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F4 DUP4 PUSH2 0x1150 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1107 JUMPI PUSH2 0x1106 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111D DUP3 PUSH2 0x1130 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1177 DUP3 PUSH2 0x1130 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1189 DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11DF PUSH2 0x11EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1223 DUP2 PUSH2 0x1112 JUMP JUMPDEST DUP2 EQ PUSH2 0x122E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x123A DUP2 PUSH2 0x1124 JUMP JUMPDEST DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1251 DUP2 PUSH2 0x1150 JUMP JUMPDEST DUP2 EQ PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 JUMPI KECCAK256 0xC9 COINBASE EXP 0xDD RETURNDATACOPY AND 0x21 0x49 SLOAD POP PC STATICCALL ADDMOD MSTORE 0x5F 0x4D SWAP6 PUSH29 0x73731FCCC70EAEDAF1B6E064736F6C6343000803003300000000000000 ",
			"sourceMap": "128:3465:1:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:7996:3",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:3"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "107:26:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:3"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:3",
										"type": ""
									}
								],
								"src": "7:139:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "212:77:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "222:22:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "237:6:3"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "231:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "231:13:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "222:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "277:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "253:23:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "253:30:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "253:30:3"
										}
									]
								},
								"name": "abi_decode_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "190:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "198:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "206:5:3",
										"type": ""
									}
								],
								"src": "152:137:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "347:87:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "357:29:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "379:6:3"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "366:12:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "366:20:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "357:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "422:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "395:26:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "395:33:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "395:33:3"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "325:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "333:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "341:5:3",
										"type": ""
									}
								],
								"src": "295:139:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "503:80:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "513:22:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "528:6:3"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "522:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "522:13:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "513:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "571:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "544:26:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "544:33:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "544:33:3"
										}
									]
								},
								"name": "abi_decode_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "481:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "489:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "497:5:3",
										"type": ""
									}
								],
								"src": "440:143:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "655:196:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "701:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "710:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "713:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "703:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "703:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "703:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "676:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "685:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "672:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "672:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "697:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "668:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "668:32:3"
											},
											"nodeType": "YulIf",
											"src": "665:2:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "727:117:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "742:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "756:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "746:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "771:63:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "806:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "817:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "826:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "781:20:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "781:53:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "771:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "625:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "636:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "648:6:3",
										"type": ""
									}
								],
								"src": "589:262:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "940:324:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "986:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "995:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "998:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "988:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "988:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "988:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "961:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "970:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "957:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "957:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "982:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "953:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "953:32:3"
											},
											"nodeType": "YulIf",
											"src": "950:2:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "1012:117:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1027:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1041:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1031:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1056:63:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1091:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1102:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1087:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1111:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "1066:20:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1066:53:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1056:6:3"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1139:118:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1154:16:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1168:2:3",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1158:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1184:63:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1215:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1239:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1194:20:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1194:53:3"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1184:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_addresst_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "902:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "913:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "925:6:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "933:6:3",
										"type": ""
									}
								],
								"src": "857:407:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1370:452:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1416:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1425:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1428:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1418:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1418:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1418:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1391:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1400:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1387:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1387:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1412:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1383:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1383:32:3"
											},
											"nodeType": "YulIf",
											"src": "1380:2:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "1442:117:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1457:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1471:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1461:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1486:63:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1521:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1532:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1541:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "1496:20:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1496:53:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1486:6:3"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1569:118:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1584:16:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1598:2:3",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1588:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1614:63:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1649:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1660:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1669:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1624:20:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1624:53:3"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "1614:6:3"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1697:118:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1712:16:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1726:2:3",
														"type": "",
														"value": "64"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1716:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1742:63:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1777:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1788:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1797:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1752:20:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1752:53:3"
													},
													"variableNames": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "1742:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1324:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1335:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1347:6:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "1355:6:3",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "1363:6:3",
										"type": ""
									}
								],
								"src": "1270:552:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1902:204:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1948:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1957:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1960:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1950:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "1950:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1950:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1923:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1932:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1919:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1919:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1944:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1915:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1915:32:3"
											},
											"nodeType": "YulIf",
											"src": "1912:2:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "1974:125:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1989:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2003:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1993:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "2018:71:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2061:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2072:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2057:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2081:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "2028:28:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2028:61:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "2018:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1872:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1883:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1895:6:3",
										"type": ""
									}
								],
								"src": "1828:278:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2189:207:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2235:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2244:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2247:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2237:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "2237:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2237:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2210:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2219:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2206:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2206:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2231:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2202:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2202:32:3"
											},
											"nodeType": "YulIf",
											"src": "2199:2:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "2261:128:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2276:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2290:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "2280:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "2305:74:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2351:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2362:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2347:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2347:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2371:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "2315:31:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2315:64:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "2305:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2159:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "2170:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2182:6:3",
										"type": ""
									}
								],
								"src": "2112:284:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2467:53:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2484:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2507:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "2489:17:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2489:24:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2477:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2477:37:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2477:37:3"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2455:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2462:3:3",
										"type": ""
									}
								],
								"src": "2402:118:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2585:50:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2602:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2622:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "2607:14:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2607:21:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2595:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2595:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2595:34:3"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2573:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2580:3:3",
										"type": ""
									}
								],
								"src": "2526:109:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2730:90:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2747:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2807:5:3"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_HillStoneFinance_$258_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "2752:54:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2752:61:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2740:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2740:74:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2740:74:3"
										}
									]
								},
								"name": "abi_encode_t_contract$_HillStoneFinance_$258_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2718:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2725:3:3",
										"type": ""
									}
								],
								"src": "2641:179:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2899:74:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2916:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2960:5:3"
															}
														],
														"functionName": {
															"name": "convert_t_rational_1_by_1_to_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2921:38:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2921:45:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2909:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2909:58:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2909:58:3"
										}
									]
								},
								"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2887:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2894:3:3",
										"type": ""
									}
								],
								"src": "2826:147:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3052:74:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3069:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3113:5:3"
															}
														],
														"functionName": {
															"name": "convert_t_rational_2_by_1_to_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "3074:38:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3074:45:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3062:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3062:58:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3062:58:3"
										}
									]
								},
								"name": "abi_encode_t_rational_2_by_1_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3040:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3047:3:3",
										"type": ""
									}
								],
								"src": "2979:147:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3197:53:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3214:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3237:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "3219:17:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3219:24:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3207:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3207:37:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3207:37:3"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3185:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3192:3:3",
										"type": ""
									}
								],
								"src": "3132:118:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3354:124:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3364:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3376:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3387:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3372:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3372:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "3364:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "3444:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3457:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3468:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3453:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3453:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "3400:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3400:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3400:71:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3326:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3338:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "3349:4:3",
										"type": ""
									}
								],
								"src": "3256:222:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3638:288:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3648:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3660:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3671:2:3",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3656:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3656:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "3648:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "3728:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3741:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3752:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3737:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3737:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "3684:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3684:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3684:71:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "3809:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3822:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3833:2:3",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3818:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3818:18:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "3765:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3765:72:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3765:72:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
														"src": "3891:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3904:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3915:2:3",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3900:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3900:18:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "3847:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3847:72:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3847:72:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3594:9:3",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "3606:6:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "3614:6:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3622:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "3633:4:3",
										"type": ""
									}
								],
								"src": "3484:442:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4066:214:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4076:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4088:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4099:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4084:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4084:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4076:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4156:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4169:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4180:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4165:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4165:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4112:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4112:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4112:71:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "4245:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4258:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4269:2:3",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4254:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4254:18:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4193:51:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4193:80:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4193:80:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4030:9:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "4042:6:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4050:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4061:4:3",
										"type": ""
									}
								],
								"src": "3932:348:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4420:214:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4430:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4442:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4453:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4438:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4438:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4430:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4510:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4523:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4534:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4519:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4519:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4466:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4466:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4466:71:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "4599:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4612:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4623:2:3",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4608:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4608:18:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_rational_2_by_1_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4547:51:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4547:80:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4547:80:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_rational_2_by_1__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4384:9:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "4396:6:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4404:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4415:4:3",
										"type": ""
									}
								],
								"src": "4286:348:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4766:206:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4776:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4788:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4799:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4784:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4784:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4776:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4856:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4869:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4880:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4865:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4865:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4812:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4812:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4812:71:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "4937:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4950:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4961:2:3",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4946:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "4946:18:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4893:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "4893:72:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4893:72:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4730:9:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "4742:6:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4750:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4761:4:3",
										"type": ""
									}
								],
								"src": "4640:332:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5070:118:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5080:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5092:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5103:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5088:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5088:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "5080:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5154:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5167:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5178:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5163:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5163:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5116:37:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5116:65:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5116:65:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "5042:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "5054:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "5065:4:3",
										"type": ""
									}
								],
								"src": "4978:210:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5316:148:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5326:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5338:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5349:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5334:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5334:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "5326:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5430:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5443:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5454:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5439:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5439:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_HillStoneFinance_$258_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5362:67:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5362:95:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5362:95:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_HillStoneFinance_$258__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "5288:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "5300:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "5311:4:3",
										"type": ""
									}
								],
								"src": "5194:270:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5568:124:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5578:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5590:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5601:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5586:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5586:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "5578:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "5658:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "5671:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5682:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "5667:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5667:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "5614:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5614:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5614:71:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "5540:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "5552:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "5563:4:3",
										"type": ""
									}
								],
								"src": "5470:222:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5742:261:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5752:25:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "5775:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "5757:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5757:20:3"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "5752:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "5786:25:3",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5809:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "5791:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5791:20:3"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "5786:1:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "5949:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "5951:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "5951:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "5951:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "5870:1:3"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5877:66:3",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "5945:1:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "5873:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "5873:74:3"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5867:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5867:81:3"
											},
											"nodeType": "YulIf",
											"src": "5864:2:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "5981:16:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "5992:1:3"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5995:1:3"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5988:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "5988:9:3"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "5981:3:3"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "5729:1:3",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "5732:1:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "5738:3:3",
										"type": ""
									}
								],
								"src": "5698:305:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6054:146:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6064:25:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "6087:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "6069:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6069:20:3"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "6064:1:3"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "6098:25:3",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "6121:1:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "6103:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6103:20:3"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "6098:1:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6145:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "6147:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "6147:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "6147:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "6139:1:3"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "6142:1:3"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "6136:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6136:8:3"
											},
											"nodeType": "YulIf",
											"src": "6133:2:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "6177:17:3",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "6189:1:3"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "6192:1:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "6185:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6185:9:3"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "6177:4:3"
												}
											]
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "6040:1:3",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "6043:1:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "6049:4:3",
										"type": ""
									}
								],
								"src": "6009:191:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6251:51:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6261:35:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6290:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "6272:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6272:24:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "6261:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6233:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "6243:7:3",
										"type": ""
									}
								],
								"src": "6206:96:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6350:48:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6360:32:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6385:5:3"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "6378:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "6378:13:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6371:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6371:21:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "6360:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6332:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "6342:7:3",
										"type": ""
									}
								],
								"src": "6308:90:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6449:81:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6459:65:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6474:5:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6481:42:3",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "6470:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6470:54:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "6459:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6431:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "6441:7:3",
										"type": ""
									}
								],
								"src": "6404:126:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6581:32:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6591:16:3",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "6602:5:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "6591:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6563:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "6573:7:3",
										"type": ""
									}
								],
								"src": "6536:77:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6703:90:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6713:74:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6781:5:3"
													}
												],
												"functionName": {
													"name": "convert_t_contract$_HillStoneFinance_$258_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "6726:54:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6726:61:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "6713:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_HillStoneFinance_$258_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6683:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "6693:9:3",
										"type": ""
									}
								],
								"src": "6619:174:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6883:53:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "6893:37:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6924:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "6906:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "6906:24:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "6893:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_HillStoneFinance_$258_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6863:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "6873:9:3",
										"type": ""
									}
								],
								"src": "6799:137:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7010:53:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7020:37:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7051:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7033:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7033:24:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "7020:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_rational_1_by_1_to_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "6990:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "7000:9:3",
										"type": ""
									}
								],
								"src": "6942:121:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7137:53:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7147:37:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7178:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7160:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7160:24:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "7147:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_rational_2_by_1_to_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "7117:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "7127:9:3",
										"type": ""
									}
								],
								"src": "7069:121:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7239:190:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7249:33:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7276:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7258:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7258:24:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "7249:5:3"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7372:22:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "7374:16:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7374:18:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7374:18:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7297:5:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7304:66:3",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "7294:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7294:77:3"
											},
											"nodeType": "YulIf",
											"src": "7291:2:3"
										},
										{
											"nodeType": "YulAssignment",
											"src": "7403:20:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7414:5:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7421:1:3",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7410:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7410:13:3"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "7403:3:3"
												}
											]
										}
									]
								},
								"name": "increment_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "7225:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "7235:3:3",
										"type": ""
									}
								],
								"src": "7196:233:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7463:152:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7480:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7483:77:3",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7473:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7473:88:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7473:88:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7577:1:3",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7580:4:3",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7570:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7570:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7570:15:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7601:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7604:4:3",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "7594:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7594:15:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7594:15:3"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "7435:180:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7664:79:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7721:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "7730:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "7733:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "7723:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7723:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7723:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7687:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7712:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7694:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7694:24:3"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "7684:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "7684:35:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "7677:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7677:43:3"
											},
											"nodeType": "YulIf",
											"src": "7674:2:3"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "7657:5:3",
										"type": ""
									}
								],
								"src": "7621:122:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7789:76:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7843:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "7852:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "7855:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "7845:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7845:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7845:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7812:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7834:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7819:14:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:21:3"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "7809:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "7809:32:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "7802:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7802:40:3"
											},
											"nodeType": "YulIf",
											"src": "7799:2:3"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "7782:5:3",
										"type": ""
									}
								],
								"src": "7749:116:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7914:79:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7971:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "7980:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "7983:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "7973:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "7973:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7973:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7937:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7962:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7944:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7944:24:3"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "7934:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "7934:35:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "7927:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "7927:43:3"
											},
											"nodeType": "YulIf",
											"src": "7924:2:3"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "7907:5:3",
										"type": ""
									}
								],
								"src": "7871:122:3"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_HillStoneFinance_$258_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_HillStoneFinance_$258_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_rational_2_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_2_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_2_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_2_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_HillStoneFinance_$258__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_HillStoneFinance_$258_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_HillStoneFinance_$258_to_t_address(value) -> converted {\n        converted := convert_t_contract$_HillStoneFinance_$258_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_HillStoneFinance_$258_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_rational_2_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 3,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052600436106100865760003560e01c8063c7bf8cf511610059578063c7bf8cf51461013a578063d509183414610177578063f1ce62b7146101a2578063f231a4f6146101cd578063fb4a2b7a146101fd57610086565b80632f4efc1f1461008b578063484a3ff4146100b65780635dbe47e8146100cd5780638a9faad21461010a575b600080fd5b34801561009757600080fd5b506100a0610228565b6040516100ad919061106d565b60405180910390f35b3480156100c257600080fd5b506100cb610235565b005b3480156100d957600080fd5b506100f460048036038101906100ef9190610e0a565b6102e8565b6040516101019190611037565b60405180910390f35b610124600480360381019061011f9190610e6f565b610336565b6040516101319190611037565b60405180910390f35b34801561014657600080fd5b50610161600480360381019061015c9190610e33565b6106e9565b60405161016e919061106d565b60405180910390f35b34801561018357600080fd5b5061018c61079e565b6040516101999190610f6a565b60405180910390f35b3480156101ae57600080fd5b506101b76107c4565b6040516101c49190611052565b60405180910390f35b6101e760048036038101906101e29190610e6f565b6107e8565b6040516101f49190611037565b60405180910390f35b34801561020957600080fd5b50610212610d81565b60405161021f919061106d565b60405180910390f35b6000600360000154905090565b73da0bab807633f07f013f94dd0e6a4f96f8742b536000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060058190555073da0bab807633f07f013f94dd0e6a4f96f8742b53600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154119050919050565b60003073ffffffffffffffffffffffffffffffffffffffff16635dbe47e8856040518263ffffffff1660e01b81526004016103719190610f6a565b60206040518083038186803b15801561038957600080fd5b505afa15801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610ebe565b6103ce57600090506106e2565b60018314156104ee5760003073ffffffffffffffffffffffffffffffffffffffff1663c7bf8cf58660016040518363ffffffff1660e01b8152600401610415929190610fbc565b60206040518083038186803b15801561042d57600080fd5b505afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190610ee7565b90508281101561047457600080fd5b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160010160008282546104c991906110de565b9250508190555082600360000160008282546104e591906110de565b92505081905550505b600283141561060e5760003073ffffffffffffffffffffffffffffffffffffffff1663c7bf8cf58660026040518363ffffffff1660e01b8152600401610535929190610fe5565b60206040518083038186803b15801561054d57600080fd5b505afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610ee7565b90508281101561059457600080fd5b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160020160008282546105e991906110de565b92505081905550826003600101600082825461060591906110de565b92505081905550505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686856040518463ffffffff1660e01b815260040161068d93929190610f85565b602060405180830381600087803b1580156106a757600080fd5b505af11580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df9190610ebe565b90505b9392505050565b6000600182141561074157600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600101549050610798565b600282141561079757600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600201549050610798565b5b92915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff16635dbe47e8856040518263ffffffff1660e01b81526004016108239190610f6a565b60206040518083038186803b15801561083b57600080fd5b505afa15801561084f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108739190610ebe565b15610a575760018314156108ff5781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160010160008282546108d69190611088565b925050819055506108f582600360000154610d8e90919063ffffffff16565b6003600001819055505b60028314156109815781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600201600082825461095d9190611088565b9250508190555081600360010160008282546109799190611088565b925050819055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016109fe92919061100e565b602060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a509190610ebe565b9050610d7a565b60056000815480929190610a6a906111a2565b9190505550600554600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001831415610bb05760405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016000815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050508160036000016000828254610ba89190611088565b925050819055505b6002831415610ca85760405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200183815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050508160036001016000828254610ca09190611088565b925050819055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610d2592919061100e565b602060405180830381600087803b158015610d3f57600080fd5b505af1158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d779190610ebe565b90505b9392505050565b6000600360010154905090565b6000808284610d9d9190611088565b905083811015610dac57600080fd5b8091505092915050565b600081359050610dc58161121a565b92915050565b600081519050610dda81611231565b92915050565b600081359050610def81611248565b92915050565b600081519050610e0481611248565b92915050565b600060208284031215610e1c57600080fd5b6000610e2a84828501610db6565b91505092915050565b60008060408385031215610e4657600080fd5b6000610e5485828601610db6565b9250506020610e6585828601610de0565b9150509250929050565b600080600060608486031215610e8457600080fd5b6000610e9286828701610db6565b9350506020610ea386828701610de0565b9250506040610eb486828701610de0565b9150509250925092565b600060208284031215610ed057600080fd5b6000610ede84828501610dcb565b91505092915050565b600060208284031215610ef957600080fd5b6000610f0784828501610df5565b91505092915050565b610f1981611112565b82525050565b610f2881611124565b82525050565b610f378161115a565b82525050565b610f468161117e565b82525050565b610f5581611190565b82525050565b610f6481611150565b82525050565b6000602082019050610f7f6000830184610f10565b92915050565b6000606082019050610f9a6000830186610f10565b610fa76020830185610f10565b610fb46040830184610f5b565b949350505050565b6000604082019050610fd16000830185610f10565b610fde6020830184610f3d565b9392505050565b6000604082019050610ffa6000830185610f10565b6110076020830184610f4c565b9392505050565b60006040820190506110236000830185610f10565b6110306020830184610f5b565b9392505050565b600060208201905061104c6000830184610f1f565b92915050565b60006020820190506110676000830184610f2e565b92915050565b60006020820190506110826000830184610f5b565b92915050565b600061109382611150565b915061109e83611150565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110d3576110d26111eb565b5b828201905092915050565b60006110e982611150565b91506110f483611150565b925082821015611107576111066111eb565b5b828203905092915050565b600061111d82611130565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111658261116c565b9050919050565b600061117782611130565b9050919050565b600061118982611150565b9050919050565b600061119b82611150565b9050919050565b60006111ad82611150565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111e0576111df6111eb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61122381611112565b811461122e57600080fd5b50565b61123a81611124565b811461124557600080fd5b50565b61125181611150565b811461125c57600080fd5b5056fea2646970667358221220a15720c9410add3e162149545058fa08525f4d957c73731fccc70eaedaf1b6e064736f6c63430008030033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC7BF8CF5 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC7BF8CF5 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xD5091834 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xF1CE62B7 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xF231A4F6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xFB4A2B7A EQ PUSH2 0x1FD JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x2F4EFC1F EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x484A3FF4 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8A9FAAD2 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x235 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xDA0BAB807633F07F013F94DD0E6A4F96F8742B53 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH20 0xDA0BAB807633F07F013F94DD0E6A4F96F8742B53 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DBE47E8 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x3CE JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC7BF8CF5 DUP7 PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x415 SWAP3 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC7BF8CF5 DUP7 PUSH1 0x2 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ ISZERO PUSH2 0x741 JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x798 JUMP JUMPDEST PUSH1 0x2 DUP3 EQ ISZERO PUSH2 0x797 JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x798 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5DBE47E8 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST ISZERO PUSH2 0xA57 JUMPI PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x8FF JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8F5 DUP3 PUSH1 0x3 PUSH1 0x0 ADD SLOAD PUSH2 0xD8E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x981 JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FE SWAP3 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA6A SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP2 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP2 PUSH1 0x3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP3 SWAP2 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC5 DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDDA DUP2 PUSH2 0x1231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDEF DUP2 PUSH2 0x1248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE04 DUP2 PUSH2 0x1248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE2A DUP5 DUP3 DUP6 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE54 DUP6 DUP3 DUP7 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE65 DUP6 DUP3 DUP7 ADD PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE92 DUP7 DUP3 DUP8 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEA3 DUP7 DUP3 DUP8 ADD PUSH2 0xDE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEB4 DUP7 DUP3 DUP8 ADD PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDE DUP5 DUP3 DUP6 ADD PUSH2 0xDCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF07 DUP5 DUP3 DUP6 ADD PUSH2 0xDF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0x1112 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0x1124 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0x115A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0x117E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF55 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF64 DUP2 PUSH2 0x1150 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF9A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xFB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFD1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xFDE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFFA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x1007 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF4C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1023 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x1030 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1067 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1082 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1093 DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0x109E DUP4 PUSH2 0x1150 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10D3 JUMPI PUSH2 0x10D2 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F4 DUP4 PUSH2 0x1150 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1107 JUMPI PUSH2 0x1106 PUSH2 0x11EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111D DUP3 PUSH2 0x1130 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1177 DUP3 PUSH2 0x1130 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1189 DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP3 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11DF PUSH2 0x11EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1223 DUP2 PUSH2 0x1112 JUMP JUMPDEST DUP2 EQ PUSH2 0x122E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x123A DUP2 PUSH2 0x1124 JUMP JUMPDEST DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1251 DUP2 PUSH2 0x1150 JUMP JUMPDEST DUP2 EQ PUSH2 0x125C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 JUMPI KECCAK256 0xC9 COINBASE EXP 0xDD RETURNDATACOPY AND 0x21 0x49 SLOAD POP PC STATICCALL ADDMOD MSTORE 0x5F 0x4D SWAP6 PUSH29 0x73731FCCC70EAEDAF1B6E064736F6C6343000803003300000000000000 ",
			"sourceMap": "128:3465:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2968:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:224;;;;;;;;;;;;;:::i;:::-;;3176:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2135:828;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3298:293;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;151:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;824:1306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3073:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2968:100;3020:4;3047:5;:14;;;3040:21;;2968:100;:::o;566:224::-;637:42;609:8;;:71;;;;;;;;;;;;;;;;;;720:1;712:5;:9;;;;741:42;731:7;;:52;;;;;;;;;;;;;;;;;;566:224::o;3176:117::-;3230:4;3285:1;3257:9;:16;3267:5;3257:16;;;;;;;;;;;;;;;:25;;;:29;3250:36;;3176:117;;;:::o;2135:828::-;2229:12;2256:4;:13;;;2270:9;2256:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2252:705;;2303:5;2296:12;;;;2252:705;2363:1;2350:9;:14;2347:257;;;2382:9;2395:4;:13;;;2409:9;2419:1;2395:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2382:39;;2454:12;2446:4;:20;;2438:29;;;;;;2528:12;2484:9;:20;2494:9;2484:20;;;;;;;;;;;;;;;:26;;:40;;;:56;;;;;;;:::i;:::-;;;;;;;;2575:12;2557:5;:14;;;:30;;;;;;;:::i;:::-;;;;;;;;2347:257;;2632:1;2620:9;:13;2617:254;;;2651:9;2664:4;:13;;;2678:9;2688:1;2664:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2651:39;;2723:12;2715:4;:20;;2707:29;;;;;;2796:12;2753:9;:20;2763:9;2753:20;;;;;;;;;;;;;;;:26;;:39;;;:55;;;;;;;:::i;:::-;;;;;;;;2842:12;2825:5;:13;;;:29;;;;;;;:::i;:::-;;;;;;;;2617:254;;2893:8;;;;;;;;;;:21;;;2915:7;;;;;;;;;;;2923:9;2933:12;2893:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2886:60;;2135:828;;;;;;:::o;3298:293::-;3364:9;3401:1;3392:5;:10;3389:90;;;3428:9;:16;3438:5;3428:16;;;;;;;;;;;;;;;:22;;:36;;;3421:43;;;;3389:90;3504:1;3495:5;:10;3492:89;;;3531:9;:16;3541:5;3531:16;;;;;;;;;;;;;;;:22;;:35;;;3524:42;;;;3492:89;3298:293;;;;;:::o;189:22::-;;;;;;;;;;;;;:::o;151:32::-;;;;;;;;;;;;:::o;824:1306::-;915:12;941:4;:13;;;955:10;941:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;938:1186;;;998:1;985:9;:14;982:169;;;1062:9;1017;:21;1027:10;1017:21;;;;;;;;;;;;;;;:27;;:41;;;:54;;;;;;;:::i;:::-;;;;;;;;1105:29;1124:9;1105:5;:14;;;:18;;:29;;;;:::i;:::-;1088:5;:14;;:46;;;;982:169;1179:1;1167:9;:13;1164:146;;;1242:9;1198;:21;1208:10;1198:21;;;;;;;;;;;;;;;:27;;:40;;;:53;;;;;;;:::i;:::-;;;;;;;;1284:9;1268:5;:13;;;:25;;;;;;;:::i;:::-;;;;;;;;1164:146;1332:8;;;;;;;;;;:17;;;1350:7;;;;;;;;;;;1358:9;1332:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1325:43;;;;938:1186;1406:5;;:8;;;;;;;;;:::i;:::-;;;;;;1461:5;;1428:9;:21;1438:10;1428:21;;;;;;;;;;;;;;;:30;;:38;;;;1496:1;1483:9;:14;1480:283;;;1546:155;;;;;;;;1590:10;1546:155;;;;;;1637:9;1546:155;;;;1682:1;1546:155;;;1516:9;:21;1526:10;1516:21;;;;;;;;;;;;;;;:27;;:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1737:9;1719:5;:14;;;:27;;;;;;;:::i;:::-;;;;;;;;1480:283;1791:1;1779:9;:13;1776:280;;;1841:155;;;;;;;;1885:10;1841:155;;;;;;1932:1;1841:155;;;;1969:9;1841:155;;;1811:9;:21;1821:10;1811:21;;;;;;;;;;;;;;;:27;;:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2030:9;2014:5;:13;;;:25;;;;;;;:::i;:::-;;;;;;;;1776:280;2077:8;;;;;;;;;;:17;;;2095:7;;;;;;;;;;;2103:9;2077:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2070:43;;824:1306;;;;;;:::o;3073:98::-;3124:4;3151:5;:13;;;3144:20;;3073:98;:::o;1455:146:2:-;1513:7;1532:9;1548:1;1544;:5;;;;:::i;:::-;1532:17;;1572:1;1567;:6;;1559:15;;;;;;1593:1;1586:8;;;1455:146;;;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:407::-;;;982:2;970:9;961:7;957:23;953:32;950:2;;;998:1;995;988:12;950:2;1041:1;1066:53;1111:7;1102:6;1091:9;1087:22;1066:53;:::i;:::-;1056:63;;1012:117;1168:2;1194:53;1239:7;1230:6;1219:9;1215:22;1194:53;:::i;:::-;1184:63;;1139:118;940:324;;;;;:::o;1270:552::-;;;;1412:2;1400:9;1391:7;1387:23;1383:32;1380:2;;;1428:1;1425;1418:12;1380:2;1471:1;1496:53;1541:7;1532:6;1521:9;1517:22;1496:53;:::i;:::-;1486:63;;1442:117;1598:2;1624:53;1669:7;1660:6;1649:9;1645:22;1624:53;:::i;:::-;1614:63;;1569:118;1726:2;1752:53;1797:7;1788:6;1777:9;1773:22;1752:53;:::i;:::-;1742:63;;1697:118;1370:452;;;;;:::o;1828:278::-;;1944:2;1932:9;1923:7;1919:23;1915:32;1912:2;;;1960:1;1957;1950:12;1912:2;2003:1;2028:61;2081:7;2072:6;2061:9;2057:22;2028:61;:::i;:::-;2018:71;;1974:125;1902:204;;;;:::o;2112:284::-;;2231:2;2219:9;2210:7;2206:23;2202:32;2199:2;;;2247:1;2244;2237:12;2199:2;2290:1;2315:64;2371:7;2362:6;2351:9;2347:22;2315:64;:::i;:::-;2305:74;;2261:128;2189:207;;;;:::o;2402:118::-;2489:24;2507:5;2489:24;:::i;:::-;2484:3;2477:37;2467:53;;:::o;2526:109::-;2607:21;2622:5;2607:21;:::i;:::-;2602:3;2595:34;2585:50;;:::o;2641:179::-;2752:61;2807:5;2752:61;:::i;:::-;2747:3;2740:74;2730:90;;:::o;2826:147::-;2921:45;2960:5;2921:45;:::i;:::-;2916:3;2909:58;2899:74;;:::o;2979:147::-;3074:45;3113:5;3074:45;:::i;:::-;3069:3;3062:58;3052:74;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3197:53;;:::o;3256:222::-;;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3354:124;;;;:::o;3484:442::-;;3671:2;3660:9;3656:18;3648:26;;3684:71;3752:1;3741:9;3737:17;3728:6;3684:71;:::i;:::-;3765:72;3833:2;3822:9;3818:18;3809:6;3765:72;:::i;:::-;3847;3915:2;3904:9;3900:18;3891:6;3847:72;:::i;:::-;3638:288;;;;;;:::o;3932:348::-;;4099:2;4088:9;4084:18;4076:26;;4112:71;4180:1;4169:9;4165:17;4156:6;4112:71;:::i;:::-;4193:80;4269:2;4258:9;4254:18;4245:6;4193:80;:::i;:::-;4066:214;;;;;:::o;4286:348::-;;4453:2;4442:9;4438:18;4430:26;;4466:71;4534:1;4523:9;4519:17;4510:6;4466:71;:::i;:::-;4547:80;4623:2;4612:9;4608:18;4599:6;4547:80;:::i;:::-;4420:214;;;;;:::o;4640:332::-;;4799:2;4788:9;4784:18;4776:26;;4812:71;4880:1;4869:9;4865:17;4856:6;4812:71;:::i;:::-;4893:72;4961:2;4950:9;4946:18;4937:6;4893:72;:::i;:::-;4766:206;;;;;:::o;4978:210::-;;5103:2;5092:9;5088:18;5080:26;;5116:65;5178:1;5167:9;5163:17;5154:6;5116:65;:::i;:::-;5070:118;;;;:::o;5194:270::-;;5349:2;5338:9;5334:18;5326:26;;5362:95;5454:1;5443:9;5439:17;5430:6;5362:95;:::i;:::-;5316:148;;;;:::o;5470:222::-;;5601:2;5590:9;5586:18;5578:26;;5614:71;5682:1;5671:9;5667:17;5658:6;5614:71;:::i;:::-;5568:124;;;;:::o;5698:305::-;;5757:20;5775:1;5757:20;:::i;:::-;5752:25;;5791:20;5809:1;5791:20;:::i;:::-;5786:25;;5945:1;5877:66;5873:74;5870:1;5867:81;5864:2;;;5951:18;;:::i;:::-;5864:2;5995:1;5992;5988:9;5981:16;;5742:261;;;;:::o;6009:191::-;;6069:20;6087:1;6069:20;:::i;:::-;6064:25;;6103:20;6121:1;6103:20;:::i;:::-;6098:25;;6142:1;6139;6136:8;6133:2;;;6147:18;;:::i;:::-;6133:2;6192:1;6189;6185:9;6177:17;;6054:146;;;;:::o;6206:96::-;;6272:24;6290:5;6272:24;:::i;:::-;6261:35;;6251:51;;;:::o;6308:90::-;;6385:5;6378:13;6371:21;6360:32;;6350:48;;;:::o;6404:126::-;;6481:42;6474:5;6470:54;6459:65;;6449:81;;;:::o;6536:77::-;;6602:5;6591:16;;6581:32;;;:::o;6619:174::-;;6726:61;6781:5;6726:61;:::i;:::-;6713:74;;6703:90;;;:::o;6799:137::-;;6906:24;6924:5;6906:24;:::i;:::-;6893:37;;6883:53;;;:::o;6942:121::-;;7033:24;7051:5;7033:24;:::i;:::-;7020:37;;7010:53;;;:::o;7069:121::-;;7160:24;7178:5;7160:24;:::i;:::-;7147:37;;7137:53;;;:::o;7196:233::-;;7258:24;7276:5;7258:24;:::i;:::-;7249:33;;7304:66;7297:5;7294:77;7291:2;;;7374:18;;:::i;:::-;7291:2;7421:1;7414:5;7410:13;7403:20;;7239:190;;;:::o;7435:180::-;7483:77;7480:1;7473:88;7580:4;7577:1;7570:15;7604:4;7601:1;7594:15;7621:122;7694:24;7712:5;7694:24;:::i;:::-;7687:5;7684:35;7674:2;;7733:1;7730;7723:12;7674:2;7664:79;:::o;7749:116::-;7819:21;7834:5;7819:21;:::i;:::-;7812:5;7809:32;7799:2;;7855:1;7852;7845:12;7799:2;7789:76;:::o;7871:122::-;7944:24;7962:5;7944:24;:::i;:::-;7937:5;7934:35;7924:2;;7983:1;7980;7973:12;7924:2;7914:79;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "951400",
				"executionCost": "988",
				"totalCost": "952388"
			},
			"external": {
				"contains(address)": "1604",
				"contractexample2()": "46915",
				"getHighLevelAmount()": "1144",
				"getLowLevelAmount()": "1231",
				"getValue(address,uint256)": "infinite",
				"hsfToken()": "1298",
				"maneger()": "1236",
				"placeBet(address,uint256,uint256)": "infinite",
				"removeBet(address,uint256,uint256)": "infinite"
			}
		},
		"methodIdentifiers": {
			"contains(address)": "5dbe47e8",
			"contractexample2()": "484a3ff4",
			"getHighLevelAmount()": "2f4efc1f",
			"getLowLevelAmount()": "fb4a2b7a",
			"getValue(address,uint256)": "c7bf8cf5",
			"hsfToken()": "f1ce62b7",
			"maneger()": "d5091834",
			"placeBet(address,uint256,uint256)": "f231a4f6",
			"removeBet(address,uint256,uint256)": "8a9faad2"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "adkey",
					"type": "address"
				}
			],
			"name": "contains",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "contractexample2",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getHighLevelAmount",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getLowLevelAmount",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "adkey",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "class",
					"type": "uint256"
				}
			],
			"name": "getValue",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "last",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "hsfToken",
			"outputs": [
				{
					"internalType": "contract HillStoneFinance",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "maneger",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "fromAdress",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_betClass",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "betAmount",
					"type": "uint256"
				}
			],
			"name": "placeBet",
			"outputs": [
				{
					"internalType": "bool",
					"name": "success",
					"type": "bool"
				}
			],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "toAddress",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_betClass",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "removeAmount",
					"type": "uint256"
				}
			],
			"name": "removeBet",
			"outputs": [
				{
					"internalType": "bool",
					"name": "success",
					"type": "bool"
				}
			],
			"stateMutability": "payable",
			"type": "function"
		}
	]
}